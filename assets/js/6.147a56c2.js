(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{319:function(t,s,_){"use strict";_.r(s);var v=_(7),a=Object(v.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"css基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css基础"}},[t._v("#")]),t._v(" CSS基础")]),t._v(" "),s("h3",{attrs:{id:"_1-css选择器及其优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-css选择器及其优先级"}},[t._v("#")]),t._v(" 1.CSS选择器及其优先级")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选择器")]),t._v(" "),s("th",[t._v("格式")]),t._v(" "),s("th",[t._v("优先级权重")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("ID选择器")]),t._v(" "),s("td",[t._v("#id")]),t._v(" "),s("td",[t._v("100")])]),t._v(" "),s("tr",[s("td",[t._v("类选择器")]),t._v(" "),s("td",[t._v(".classname")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("属性选择器")]),t._v(" "),s("td",[t._v("a[ref=“eee”]")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("伪类选择器")]),t._v(" "),s("td",[t._v("li:last-child")]),t._v(" "),s("td",[t._v("10")])]),t._v(" "),s("tr",[s("td",[t._v("标签选择器")]),t._v(" "),s("td",[t._v("div")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("伪元素选择器")]),t._v(" "),s("td",[t._v("li:after")]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("相邻兄弟选择器")]),t._v(" "),s("td",[t._v("h1+p")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("子代选择器")]),t._v(" "),s("td",[t._v("ul>li")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("后代选择器")]),t._v(" "),s("td",[t._v("li a")]),t._v(" "),s("td",[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("通配符选择器")]),t._v(" "),s("td",[t._v("*")]),t._v(" "),s("td",[t._v("0")])])])]),t._v(" "),s("p",[s("strong",[t._v("对于选择器的")]),s("strong",[s("em",[t._v("优先级")])])]),t._v(" "),s("ul",[s("li",[t._v("内联选择器：1000")]),t._v(" "),s("li",[t._v("ID选择器：100")]),t._v(" "),s("li",[t._v("类选择器,伪类选择器,属性选择器：10")]),t._v(" "),s("li",[t._v("标签选择器,伪类选择器：1")])]),t._v(" "),s("p",[s("strong",[s("strong",[s("em",[t._v("注意事项")])])])]),t._v(" "),s("ul",[s("li",[t._v("!important声明的样式优先级最高")]),t._v(" "),s("li",[t._v("如果优先级相同，则最后出现的样式生效")]),t._v(" "),s("li",[t._v("继承得到的样式优先级最低")]),t._v(" "),s("li",[t._v("通用选择器（*）、子选择器（>）和相邻同胞选择器（+）并不在这四个等级中，所以它们的权值都为 0 ；")]),t._v(" "),s("li",[t._v("样式表的来源不同时，优先级顺序为：内联样式 > 内部样式 > 外部样式 > 浏览器用户自定义样式 > 浏览器默认样式。")])]),t._v(" "),s("h3",{attrs:{id:"_2-css中可继承与不可继承属性有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-css中可继承与不可继承属性有哪些"}},[t._v("#")]),t._v(" 2. CSS中可继承与不可继承属性有哪些")]),t._v(" "),s("h4",{attrs:{id:"一、无继承性的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、无继承性的属性"}},[t._v("#")]),t._v(" 一、无继承性的属性")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("display:")]),t._v(" 规定元素应该生成的框的类型")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("文本属性:")])])])]),t._v(" "),s("ul",[s("li",[t._v("vertical-align：垂直文本对齐")]),t._v(" "),s("li",[t._v("text-decoration：规定添加到文本的装饰")]),t._v(" "),s("li",[t._v("text-shadow：文本阴影效果")]),t._v(" "),s("li",[t._v("white-space：空白符的处理")]),t._v(" "),s("li",[t._v("unicode-bidi：设置文本的方向")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[s("strong",[t._v("盒子模型的属性：")]),t._v(" width、height、margin、border、padding")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("背景属性：")]),t._v(" background、background-color、background-image、background-repeat、background-position、background-attachment")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("定位属性：")]),t._v(" float、clear、position、top、right、bottom、left、min-width、min-height、max-width、max-height、overflow、clip、z-index")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("生成内容属性：")]),t._v(" content、counter-reset、counter-increment")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("轮廓样式属性：")]),t._v(" outline-style、outline-width、outline-color、outline")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("页面样式属性：")]),t._v(" size、page-break-before、page-break-after")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("声音样式属性：")]),t._v(" pause-before、pause-after、pause、cue-before、cue-after、cue、play-during")])])]),t._v(" "),s("h4",{attrs:{id:"二、有继承性的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、有继承性的属性"}},[t._v("#")]),t._v(" 二、有继承性的属性")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("字体系列属性")])])]),t._v(" "),s("ul",[s("li",[t._v("font-family：字体系列")]),t._v(" "),s("li",[t._v("font-weight：字体的粗细")]),t._v(" "),s("li",[t._v("font-size：字体的大小")]),t._v(" "),s("li",[t._v("font-style：字体的风格")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("文本系列属性")])])]),t._v(" "),s("ul",[s("li",[t._v("text-indent：文本缩进")]),t._v(" "),s("li",[t._v("text-align：文本水平对齐")]),t._v(" "),s("li",[t._v("line-height：行高")]),t._v(" "),s("li",[t._v("word-spacing：单词之间的间距")]),t._v(" "),s("li",[t._v("letter-spacing：中文或者字母之间的间距")]),t._v(" "),s("li",[t._v("text-transform：控制文本大小写（就是uppercase、lowercase、capitalize这三个）")]),t._v(" "),s("li",[t._v("color：文本颜色")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("元素可见性")])])]),t._v(" "),s("ul",[s("li",[t._v("visibility：控制元素显示隐藏")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[t._v("列表布局属性")])])]),t._v(" "),s("ul",[s("li",[t._v("list-style：列表风格，包括list-style-type、list-style-image等")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("strong",[t._v("光标属性")])])]),t._v(" "),s("ul",[s("li",[t._v("cursor：光标显示为何种形态")])]),t._v(" "),s("h3",{attrs:{id:"_3-display的属性值及其作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-display的属性值及其作用"}},[t._v("#")]),t._v(" 3. display的属性值及其作用")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性值")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("none")]),t._v(" "),s("td",[t._v("元素不显示，并且会从文档流中移除。")])]),t._v(" "),s("tr",[s("td",[t._v("block")]),t._v(" "),s("td",[t._v("块类型。默认宽度为父元素宽度，可设置宽高，换行显示。")])]),t._v(" "),s("tr",[s("td",[t._v("inline")]),t._v(" "),s("td",[t._v("行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。")])]),t._v(" "),s("tr",[s("td",[t._v("inline-block")]),t._v(" "),s("td",[t._v("默认宽度为内容宽度，可以设置宽高，同行显示。")])]),t._v(" "),s("tr",[s("td",[t._v("list-item")]),t._v(" "),s("td",[t._v("像块类型元素一样显示，并添加样式列表标记。")])]),t._v(" "),s("tr",[s("td",[t._v("table")]),t._v(" "),s("td",[t._v("此元素会作为块级表格来显示。")])]),t._v(" "),s("tr",[s("td",[t._v("inherit")]),t._v(" "),s("td",[t._v("规定应该从父元素继承display属性的值。")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-display的block、inline和inline-block的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-display的block、inline和inline-block的区别"}},[t._v("#")]),t._v(" 4. display的block、inline和inline-block的区别")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("block：")]),t._v("  会独占一行，多个元素会另起一行，可以设置width、height、margin和padding属性")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("inline：")]),t._v(" 元素不会独占一行，设置width、height属性无效。但可以设置水平方向的margin和padding属性，不能设置垂直方向的padding和margin")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("inline-block：")]),t._v(" 将对象设置为inline对象，但对象的内容作为block对象呈现，之后的内联对象会被排列在同一行内")])])]),t._v(" "),s("p",[t._v("对于行内元素和块级元素，其特点如下：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("行内元素")])])]),t._v(" "),s("ul",[s("li",[t._v("设置宽高无效；")]),t._v(" "),s("li",[t._v("可以设置水平方向的margin和padding属性，不能设置垂直方向的padding和margin；")]),t._v(" "),s("li",[t._v("不会自动换行；")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("块级元素")])])]),t._v(" "),s("ul",[s("li",[t._v("可以设置宽高；")]),t._v(" "),s("li",[t._v("设置margin和padding都有效；")]),t._v(" "),s("li",[t._v("可以自动换行；")]),t._v(" "),s("li",[t._v("多个块状，默认排列从上到下。")])]),t._v(" "),s("h3",{attrs:{id:"_5-隐藏元素的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-隐藏元素的方法有哪些"}},[t._v("#")]),t._v(" 5. 隐藏元素的方法有哪些")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("display: none：")]),t._v(" 渲染树不会包含该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("visibility: hidden：")]),t._v(" 元素在页面中仍占据空间，但是不会响应绑定的监听事件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("opacity: 0：")]),t._v(" 将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空间，并且能够响应元素绑定的监听事件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("position: absolute：")]),t._v(" 通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("z-index: 负值：")]),t._v(" 来使其他元素遮盖住该元素，以此来实现隐藏。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("clip/clip-path ：")]),t._v(" 使用元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("transform: scale(0,0)：")]),t._v(" 将元素缩放为 0，来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。")])])]),t._v(" "),s("h3",{attrs:{id:"_6-link和-import的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-link和-import的区别"}},[t._v("#")]),t._v(" 6. link和@import的区别")]),t._v(" "),s("p",[t._v("两者都是外部引用CSS的方式，它们的区别如下：")]),t._v(" "),s("ul",[s("li",[t._v("link是XHTML标签，除了加载CSS外，还可以定义RSS等其他事务；@import属于CSS范畴，只能加载CSS。")]),t._v(" "),s("li",[t._v("link引用CSS时，在页面载入时同时加载；@import需要页面网页完全载入以后加载。")]),t._v(" "),s("li",[t._v("link是XHTML标签，无兼容问题；@import是在CSS2.1提出的，低版本的浏览器不支持。")]),t._v(" "),s("li",[t._v("link支持使用Javascript控制DOM去改变样式；而@import不支持。")])]),t._v(" "),s("h3",{attrs:{id:"_7-transition和animation的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-transition和animation的区别"}},[t._v("#")]),t._v(" 7. transition和animation的区别")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("transition是过渡属性，")]),t._v(" 强调过度，它的实现需要触发一个事件（比如鼠标移动上去，焦点，点击等）才执行动画。它类似于flash的补间动画，设置一个开始关键帧，一个结束关键帧。")]),t._v(" "),s("li",[s("strong",[t._v("animation是动画属性，")]),t._v(" 它的实现不需要触发事件，设定好时间之后可以自己执行，且可以循环一个动画。它也类似于flash的补间动画，但是它可以设置多个关键帧（用@keyframe定义）完成动画。")])]),t._v(" "),s("h3",{attrs:{id:"_8-display-none与visibility-hidden的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-display-none与visibility-hidden的区别"}},[t._v("#")]),t._v(" 8. display:none与visibility:hidden的区别")]),t._v(" "),s("p",[t._v("这两个属性都是让元素隐藏，不可见。"),s("strong",[t._v("两者区别如下：")])]),t._v(" "),s("p",[t._v("（1）"),s("strong",[t._v("在渲染树中")])]),t._v(" "),s("ul",[s("li",[t._v("display:none会让元素完全从渲染树中消失，渲染时不会占据任何空间；")]),t._v(" "),s("li",[t._v("visibility:hidden不会让元素从渲染树中消失，渲染的元素还会占据相应的空间，只是内容不可见。")])]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("是否是继承属性")])]),t._v(" "),s("ul",[s("li",[s("em",[t._v("display:none是非继承属性")]),t._v("， 子孙节点会随着父节点从渲染树消失，通过修改子孙节点的属性也无法显示；")]),t._v(" "),s("li",[s("em",[t._v("visibility:hidden是继承属性")]),t._v("，子孙节点消失是由于继承了hidden，通过设置visibility:visible可以让子孙节点显示；")])]),t._v(" "),s("p",[t._v("（3）修改常规文档流中元素的 display 通常会造成文档的重排，但是修改visibility属性只会造成本元素的重绘；")]),t._v(" "),s("p",[t._v("（4）如果使用读屏器，设置为display:none的内容不会被读取，设置为visibility:hidden的内容会被读取。")]),t._v(" "),s("h3",{attrs:{id:"_9-伪元素和伪类的区别和作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-伪元素和伪类的区别和作用"}},[t._v("#")]),t._v(" 9.  伪元素和伪类的区别和作用？")]),t._v(" "),s("ul",[s("li",[t._v("伪元素：在内容元素的前后插入额外的元素或样式，但是这些元素实际上并不在文档中生成。它们只在外部显示可见，但不会在文档的源代码中找到它们，因此，称为“伪”元素。例如：")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::before")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一章"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"after {content:"')]),t._v('糖糖!"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::first-line")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p::first-letter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("伪类：将特殊的效果添加到特定选择器上。它是已有元素上添加类别的，不会产生新的元素。例如：")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a:hove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p:first-child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("总结：")]),t._v(" 伪类是通过在元素选择器上加⼊伪类改变元素状态，⽽伪元素通过对元素的操作进⾏对元素的改变。")]),t._v(" "),s("h3",{attrs:{id:"_10-对requestanimationframe的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-对requestanimationframe的理解"}},[t._v("#")]),t._v(" 10. 对requestAnimationframe的理解")]),t._v(" "),s("p",[t._v("实现动画效果的方法比较多，Javascript 中可以通过定时器 setTimeout 来实现，CSS3 中可以使用 transition 和 animation 来实现，HTML5 中的 canvas 也可以实现。除此之外，HTML5 提供一个专门用于请求动画的API，那就是 requestAnimationFrame，顾名思义就是 "),s("strong",[t._v("请求动画帧")]),t._v("。")]),t._v(" "),s("p",[t._v("MDN对该方法的描述：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用\n指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。\n\n")])])]),s("p",[s("strong",[t._v("语法：")]),t._v(" "),s("em",[t._v("window.requestAnimationFrame(callback)")]),t._v("; 其中，callback是"),s("strong",[t._v("下一次重绘之前更新动画帧所调用的函数")]),t._v("(即上面所说的回调函数)。该回调函数会被传入DOMHighResTimeStamp参数，它表示requestAnimationFrame() 开始去执行回调函数的时刻。该方法属于"),s("strong",[t._v("宏任务")]),t._v("，所以会在执行完微任务之后再去执行。")]),t._v(" "),s("p",[s("strong",[t._v("取消动画：")]),t._v(" 使用cancelAnimationFrame()来取消执行动画，该方法接收一个参数——requestAnimationFrame默认返回的id，只需要传入这个id就可以取消动画了。")]),t._v(" "),s("p",[s("strong",[t._v("优势：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("CPU节能：")]),t._v(" 使用SetTinterval 实现的动画，当页面被隐藏或最小化时，SetTinterval 仍然在后台执行动画任务，由于此时页面处于不可见或不可用状态，刷新动画是没有意义的，完全是浪费CPU资源。而RequestAnimationFrame则完全不同，当页面处理未激活的状态下，该页面的屏幕刷新任务也会被系统暂停，因此跟着系统走的RequestAnimationFrame也会停止渲染，当页面被激活时，动画就从上次停留的地方继续执行，有效节省了CPU开销。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("函数节流：")]),t._v(" 在高频率事件( resize, scroll 等)中，为了防止在一个刷新间隔内发生多次函数执行，RequestAnimationFrame可保证每个刷新间隔内，函数只被执行一次，这样既能保证流畅性，也能更好的节省函数执行的开销，一个刷新间隔内函数执行多次时没有意义的，因为多数显示器每16.7ms刷新一次，多次绘制并不会在屏幕上体现出来。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("减少DOM操作：")]),t._v(" requestAnimationFrame 会把每一帧中的所有DOM操作集中起来，在一次重绘或回流中就完成，并且重绘或回流的时间间隔紧紧跟随浏览器的刷新频率，一般来说，这个频率为每秒60帧。")])])]),t._v(" "),s("p",[s("strong",[t._v("setTimeout执行动画的缺点：")]),t._v(" 它通过设定间隔时间来不断改变图像位置，达到动画效果。但是容易出现卡顿、抖动的现象；原因是：")]),t._v(" "),s("ul",[s("li",[t._v("settimeout任务被放入异步队列，只有当主线程任务执行完后才会执行队列中的任务，因此实际执行时间总是比设定时间要晚；")]),t._v(" "),s("li",[t._v("settimeout的固定时间间隔不一定与屏幕刷新间隔时间相同，会引起丢帧。")])]),t._v(" "),s("h3",{attrs:{id:"_11-对盒模型的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-对盒模型的理解"}},[t._v("#")]),t._v(" 11. 对盒模型的理解")]),t._v(" "),s("p",[t._v("CSS3中的盒模型有以下两种：标准盒子模型、IE盒子模型")]),t._v(" "),s("p",[t._v("下面看看"),s("strong",[t._v("标准盒子模型")]),t._v("的模型图:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/c0e1d2e0-8f9b-11eb-85f6-6fac77c0c9b3.png",alt:""}})]),t._v(" "),s("p",[t._v("从上图可以看到：")]),t._v(" "),s("ul",[s("li",[s("p",[s("em",[t._v("盒子总宽度")]),t._v(" = width + padding + border + margin;")])]),t._v(" "),s("li",[s("p",[s("em",[t._v("盒子总高度")]),t._v(" = height + padding + border + margin")])])]),t._v(" "),s("p",[t._v("也就是，width/height 只是内容高度，不包含 padding 和 border值")]),t._v(" "),s("p",[t._v("所以上面问题中，设置width为"),s("strong",[t._v("200px")]),t._v("，但由于存在padding，但实际上盒子的宽度有"),s("strong",[t._v("240px")])]),t._v(" "),s("p",[t._v("下面看看"),s("strong",[t._v("IE 怪异盒子模型")]),t._v("的模型图:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.vue-js.com/cfbb3ef0-8f9b-11eb-ab90-d9ae814b240d.png",alt:""}})]),t._v(" "),s("p",[t._v("从上图可以看到：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("盒子总宽度 = width + margin;")])]),t._v(" "),s("li",[s("p",[t._v("盒子总高度 = height + margin;")])])]),t._v(" "),s("p",[t._v("也就是，width/height 包含了 "),s("strong",[t._v("padding")]),t._v("和 "),s("strong",[t._v("border")]),t._v("值")]),t._v(" "),s("h3",{attrs:{id:"_12-为什么有时候用translate来改变位置而不是定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-为什么有时候用translate来改变位置而不是定位"}},[t._v("#")]),t._v(" 12. 为什么有时候⽤translate来改变位置⽽不是定位？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("translate 是 transform 属性的⼀个值。改变transform或opacity不会触发浏览器重新布局（reflow）或重绘（repaint），\n只会触发复合（compositions）。⽽改变绝对定位会触发重新布局，进⽽触发重绘和复合。transform使浏览器为元素创建⼀个\nGPU 图层，但改变绝对定位会使⽤到 CPU。 因此translate()更⾼效，可以缩短平滑动画的绘制时间。 ⽽translate改变位置\n时，元素依然会占据其原始空间，绝对定位就不会发⽣这种情况。\n\n")])])]),s("h3",{attrs:{id:"_13-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-li-与-li-之间有看不见的空白间隔是什么原因引起的-如何解决"}},[t._v("#")]),t._v(" 13. li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？")]),t._v(" "),s("p",[t._v("浏览器会把inline内联元素间的空白字符（空格、换行、Tab等）渲染成一个空格。为了美观，通常是一个 <"),s("em",[t._v("li")]),t._v(">放在一行，\n这导致<"),s("em",[t._v("li")]),t._v(">换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("为<"),s("em",[t._v("li")]),t._v(">设置float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。")])]),t._v(" "),s("li",[s("p",[t._v("将所有<"),s("em",[t._v("li")]),t._v(">写在同一行。不足：代码不美观。")])]),t._v(" "),s("li",[s("p",[t._v("将<"),s("em",[t._v("ul")]),t._v(">内的字符尺寸直接设为0，即font-size:0。不足：<"),s("em",[t._v("ul")]),t._v(">中的其他字符尺寸也被设为0，需要额外重新设定其他字符尺寸，且在Safari浏览器依然会出现空白间隔。")])]),t._v(" "),s("li",[s("p",[t._v("消除<"),s("em",[t._v("ul")]),t._v(">的字符间隔letter-spacing:-8px，不足：这也设置了<"),s("em",[t._v("li")]),t._v(">内的字符间隔，因此需要将<"),s("em",[t._v("li")]),t._v(">内的字符间隔设为默认letter-spacing:normal。")])])]),t._v(" "),s("h3",{attrs:{id:"_14-css3中有哪些新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-css3中有哪些新特性"}},[t._v("#")]),t._v(" 14. CSS3中有哪些新特性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("新增各种CSS选择器 （: not(.input)：所有 class 不是“input”的节点）")])]),t._v(" "),s("li",[s("p",[t._v("圆角 （border-radius:8px）")])]),t._v(" "),s("li",[s("p",[t._v("多列布局 （multi-column layout）")])]),t._v(" "),s("li",[s("p",[t._v("阴影和反射 （Shadoweflect）")])]),t._v(" "),s("li",[s("p",[t._v("文字特效 （text-shadow）")])]),t._v(" "),s("li",[s("p",[t._v("文字渲染 （Text-decoration）")])]),t._v(" "),s("li",[s("p",[t._v("线性渐变 （gradient）")])]),t._v(" "),s("li",[s("p",[t._v("旋转 （transform）")])]),t._v(" "),s("li",[s("p",[t._v("增加了旋转,缩放,定位,倾斜,动画,多背景")])])]),t._v(" "),s("h3",{attrs:{id:"_15-替换元素的概念及计算规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-替换元素的概念及计算规则"}},[t._v("#")]),t._v(" 15. 替换元素的概念及计算规则")]),t._v(" "),s("p",[t._v("通过修改某个属性值呈现的内容就可以被替换的元素就称为“替换元素”。")]),t._v(" "),s("p",[t._v("替换元素除了内容可替换这一特性以外，还有以下特性：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("内容的外观不受页面上的CSS的影响：")]),t._v(" 用专业的话讲就是在样式表现在CSS作用域之外。如何更改替换元素本身的外观需要类似appearance属性，或者浏览器自身暴露的一些样式接口。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("有自己的尺寸：")]),t._v(" 在Web中，很多替换元素在没有明确尺寸设定的情况下，其默认的尺寸（不包括边框）是300像素×150像素")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("在很多CSS属性上有自己的一套表现规则：")]),t._v(" 比较具有代表性的就是vertical-align属性，对于替换元素和非替换元素，vertical-align属性值的解释是不一样的。比方说vertical-align的默认值的baseline，很简单的属性值，基线之意，被定义为字符x的下边缘，而替换元素的基线却被硬生生定义成了元素的下边缘。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("所有的替换元素都是内联水平元素：")]),t._v(" 也就是替换元素和替换元素、替换元素和文字都是可以在一行显示的。但是，替换元素默认的display值却是不一样的，有的是inline，有的是inline-block。")])])]),t._v(" "),s("p",[t._v("替换元素的尺寸从内而外分为三类：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("固有尺寸：")]),t._v(" 指的是替换内容原本的尺寸。例如，图片、视频作为一个独立文件存在的时候，都是有着自己的宽度和高度的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("HTML尺寸：")]),t._v(" 只能通过HTML原生属性改变，这些HTML原生属性包括的width和height属性、的size属性。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("CSS尺寸：")]),t._v(" 特指可以通过CSS的width和height或者max-width/min-width和max-height/min-height设置的尺寸，对应盒尺寸中的content box。")])])]),t._v(" "),s("p",[t._v("这三层结构的计算规则具体如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果没有CSS尺寸和HTML尺寸，则使用固有尺寸作为最终的宽高。")])]),t._v(" "),s("li",[s("p",[t._v("如果没有CSS尺寸，则使用HTML尺寸作为最终的宽高。")])]),t._v(" "),s("li",[s("p",[t._v("如果有CSS尺寸，则最终尺寸由CSS属性决定。")])]),t._v(" "),s("li",[s("p",[t._v("如果“固有尺寸”含有固有的宽高比例，同时仅设置了宽度或仅设置了高度，则元素依然按照固有的宽高比例显示。")])]),t._v(" "),s("li",[s("p",[t._v("如果上面的条件都不符合，则最终宽度表现为300像素，高度为150像素。")])]),t._v(" "),s("li",[s("p",[t._v("内联替换元素和块级替换元素使用上面同一套尺寸计算规则。")])])]),t._v(" "),s("h3",{attrs:{id:"_16-常见的图片格式及使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-常见的图片格式及使用场景"}},[t._v("#")]),t._v(" 16. 常见的图片格式及使用场景")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("BMP")]),t._v("，是无损的、既支持索引色也支持直接色的点阵图。这种图片格式几乎没有对数据进行压缩，所以BMP格式的图片通常是较大的文件。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("GIF")]),t._v("是无损的、采用索引色的点阵图。采用LZW压缩算法进行编码。文件小，是GIF格式的优点，同时，GIF格式还具有支持动画以及透明的优点。但是GIF格式仅支持8bit的索引色，所以GIF格式适用于对色彩要求不高同时需要文件体积较小的场景。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("JPEG")]),t._v("是有损的、采用直接色的点阵图。JPEG的图片的优点是采用了直接色，得益于更丰富的色彩，JPEG非常适合用来存储照片，与GIF相比，JPEG不适合用来存储企业Logo、线框类的图。因为有损压缩会导致图片模糊，而直接色的选用，又会导致图片文件较GIF更大。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("PNG-8")]),t._v("是无损的、使用索引色的点阵图。PNG是一种比较新的图片格式，PNG-8是非常好的GIF格式替代者，在可能的情况下，应该尽可能的使用PNG-8而不是GIF，因为在相同的图片效果下，PNG-8具有更小的文件体积。除此之外，PNG-8还支持透明度的调节，而GIF并不支持。除非需要动画的支持，否则没有理由使用GIF而不是PNG-8。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("PNG-24")]),t._v("是无损的、使用直接色的点阵图。PNG-24的优点在于它压缩了图片的数据，使得同样效果的图片，PNG-24格式的文件大小要比BMP小得多。当然，PNG24的图片还是要比JPEG、GIF、PNG-8大得多。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("SVG")]),t._v("是无损的矢量图。SVG是矢量图意味着SVG图片由直线和曲线以及绘制它们的方法组成。当放大SVG图片时，看到的还是线和曲线，而不会出现像素点。SVG图片在放大时，不会失真，所以它适合用来绘制Logo、Icon等。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("WebP")]),t._v("是谷歌开发的一种新图片格式，WebP是同时支持有损和无损压缩的、使用直接色的点阵图。从名字就可以看出来它是为Web而生的，什么叫为Web而生呢？就是说相同质量的图片，WebP具有更小的文件体积。现在网站上充满了大量的图片，如果能够降低每一个图片的文件大小，那么将大大减少浏览器和服务器之间的数据传输量，进而降低访问延迟，提升访问体验。目前只有Chrome浏览器和Opera浏览器支持WebP格式，兼容性不太好。")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在无损压缩的情况下，相同质量的WebP图片，文件大小要比PNG小26%；")])]),t._v(" "),s("li",[s("p",[t._v("在有损压缩的情况下，具有相同图片精度的WebP图片，文件大小要比JPEG小25%~34%；")])]),t._v(" "),s("li",[s("p",[t._v("WebP图片格式支持图片透明度，一个无损压缩的WebP图片，如果要支持透明度只需要22%的格外文件大小。")])])]),t._v(" "),s("h3",{attrs:{id:"_17-对-csssprites-的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-对-csssprites-的理解"}},[t._v("#")]),t._v(" 17. 对 CSSSprites 的理解")]),t._v(" "),s("p",[s("strong",[t._v("CSSSprites（精灵图）")]),t._v("，将一个页面涉及到的所有图片都包含到一张大图中去，然后利用CSS的 background-image，background-repeat，background-position属性的组合进行背景定位。")]),t._v(" "),s("p",[s("strong",[t._v("优点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("利用"),s("em",[t._v("CSS Sprites")]),t._v("能很好地减少网页的http请求，从而大大提高了页面的性能，这是"),s("em",[t._v("CSS Sprites")]),t._v("最大的优点；")])]),t._v(" "),s("li",[s("p",[s("em",[t._v("CSS Sprites")]),t._v("能减少图片的字节，把3张图片合并成1张图片的字节总是小于这3张图片的字节总和。")])])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在图片合并时，要把多张图片有序的、合理的合并成一张图片，还要留好足够的空间，防止板块内出现不必要的背景。在宽屏及高分辨率下的自适应页面，如果背景不够宽，很容易出现背景断裂；")])]),t._v(" "),s("li",[s("p",[s("em",[t._v("CSSSprites")]),t._v("在开发的时候相对来说有点麻烦，需要借助"),s("em",[t._v("photoshop")]),t._v("或其他工具来对每个背景单元测量其准确的位置。")])]),t._v(" "),s("li",[s("p",[t._v("维护方面："),s("em",[t._v("CSS Sprites")]),t._v("在维护的时候比较麻烦，页面背景有少许改动时，就要改这张合并的图片，无需改的地方尽量不要动，这样避免改动更多的"),s("em",[t._v("CSS")]),t._v("，如果在原来的地方放不下，又只能（最好）往下加图片，这样图片的字节就增加了，还要改动"),s("em",[t._v("CSS")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"_18-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x这种图片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-什么是物理像素-逻辑像素和像素密度-为什么在移动端开发时需要用到-3x-2x这种图片"}},[t._v("#")]),t._v(" 18. 什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x这种图片？")]),t._v(" "),s("p",[t._v("而如果有一把尺子来实际测量这部手机的物理像素，实际为 1242*2688 物理像素；经过计算可知，1242/414=3，也就是说，在单边上，一个逻辑像素=3个物理像素，就说这个屏幕的像素密度为 3，也就是常说的 3 倍屏。")]),t._v(" "),s("p",[t._v("对于图片来说，为了保证其不失真，1 个图片像素至少要对应一个物理像素，假如原始图片是 500300 像素，那么在 3 倍屏上就要放一个 1500900 像素的图片才能保证 1 个物理像素至少对应一个图片像素，才能不失真。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/5e586ba000016e3a16001478.jpg",alt:""}})]),t._v(" "),s("p",[t._v("当然，也可以针对所有屏幕，都只提供最高清图片。虽然低密度屏幕用不到那么多图片像素，而且会因为下载多余的像素造成带宽浪费和下载延迟，但从结果上说能保证图片在所有屏幕上都不会失真。")]),t._v(" "),s("p",[t._v("还可以使用 CSS 媒体查询来判断不同的像素密度，从而选择不同的图片:")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#imgage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log.png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" screen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-device-pixel-ratio")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#imgage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gin.png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_19-margin-和-padding-的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-margin-和-padding-的使用场景"}},[t._v("#")]),t._v(" 19. margin 和 padding 的使用场景")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("需要在border外侧添加空白，且空白处不需要背景（色）时，使用 margin；")])]),t._v(" "),s("li",[s("p",[t._v("需要在border内测添加空白，且空白处需要背景（色）时，使用 padding。")])])]),t._v(" "),s("h3",{attrs:{id:"_20-对line-height-的理解及其赋值方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-对line-height-的理解及其赋值方式"}},[t._v("#")]),t._v(" 20. 对line-height 的理解及其赋值方式")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("line-height的概念：")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("line-height 指一行文本的高度，包含了字间距，实际上是下一行基线到上一行基线距离；")])]),t._v(" "),s("li",[s("p",[t._v("如果一个标签没有定义 height 属性，那么其最终表现的高度由 line-height 决定；")])]),t._v(" "),s("li",[s("p",[t._v("一个容器没有设置高度，那么撑开容器高度的是 line-height，而不是容器内的文本内容；")])]),t._v(" "),s("li",[s("p",[t._v("把 line-height 值设置为 height 一样大小的值可以实现单行文字的垂直居中；")])]),t._v(" "),s("li",[s("p",[t._v("line-height 和 height 都能撑开一个高度；")])])]),t._v(" "),s("p",[t._v("2."),s("strong",[t._v("line-height 的赋值方式：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("带单位：px 是固定值，而 em 会参考父元素 font-size 值计算自身的行高")])]),t._v(" "),s("li",[s("p",[t._v("纯数字：会把比例传递给后代。例如，父级行高为 1.5，子元素字体为 18px，则子元素行高为 1.5 * 18 = 27px")])]),t._v(" "),s("li",[s("p",[t._v("百分比：将计算后的值传递给后代")])])]),t._v(" "),s("h3",{attrs:{id:"_21-css-优化和提高性能的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-css-优化和提高性能的方法有哪些"}},[t._v("#")]),t._v(" 21. CSS 优化和提高性能的方法有哪些？")]),t._v(" "),s("p",[s("strong",[t._v("1. 加载性能：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("css压缩：将写好的css进行打包压缩，可以减小文件体积。")])]),t._v(" "),s("li",[s("p",[t._v("css单一样式：当需要下边距和左边距的时候，很多时候会选择使用 margin:top 0 bottom 0；但margin-bottom:bottom;margin-left:left;执行效率会更高。")])]),t._v(" "),s("li",[s("p",[t._v("减少使用@import，建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")])])]),t._v(" "),s("p",[s("strong",[t._v("2. 选择器性能：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；")])]),t._v(" "),s("li",[s("p",[t._v("如果规则拥有ID选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹配它们了）。")])]),t._v(" "),s("li",[s("p",[t._v("避免使用通配规则，如*{}计算次数惊人，只对需要用到的元素进行选择。")])]),t._v(" "),s("li",[s("p",[t._v("尽量少的去对标签进行选择，而是用class。")])]),t._v(" "),s("li",[s("p",[t._v("尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过三层，更多的使用类来关联每一个标签元素。")])]),t._v(" "),s("li",[s("p",[t._v("了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。")])])]),t._v(" "),s("p",[s("strong",[t._v("3. 渲染性能：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("慎重使用高性能属性：浮动、定位。")])]),t._v(" "),s("li",[s("p",[t._v("尽量减少页面重排、重绘。")])]),t._v(" "),s("li",[s("p",[t._v("去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。")])]),t._v(" "),s("li",[s("p",[t._v("属性值为0时，不加单位。")])]),t._v(" "),s("li",[s("p",[t._v("属性值为浮动小数0.**，可以省略小数点之前的0。")])]),t._v(" "),s("li",[s("p",[t._v("标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")])]),t._v(" "),s("li",[s("p",[t._v("不使用@import前缀，它会影响css的加载速度。")])]),t._v(" "),s("li",[s("p",[t._v("选择器优化嵌套，尽量避免层级过深。")])]),t._v(" "),s("li",[s("p",[t._v("ss雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清楚，再使用。")])]),t._v(" "),s("li",[s("p",[t._v("正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")])]),t._v(" "),s("li",[s("p",[t._v("不滥用web字体。对于中文网站来说WebFonts可能很陌生，国外却很流行。web fonts通常体积庞大，而且一些浏览器在下载web fonts时会阻塞页面渲染损伤性能。")])])]),t._v(" "),s("p",[s("strong",[t._v("4. 可维护性、健壮性：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。")])]),t._v(" "),s("li",[s("p",[t._v("样式与内容分离：将css代码定义到外部css中。")])])]),t._v(" "),s("h3",{attrs:{id:"_22-css预处理器-后处理器是什么-为什么要使用它们"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-css预处理器-后处理器是什么-为什么要使用它们"}},[t._v("#")]),t._v(" 22. CSS预处理器/后处理器是什么？为什么要使用它们？")]),t._v(" "),s("p",[s("strong",[t._v("预处理器，")]),t._v(" 如："),s("em",[t._v("less")]),t._v("，"),s("em",[t._v("sass")]),t._v("，"),s("em",[t._v("stylus")]),t._v("，用来预编译"),s("em",[t._v("sass")]),t._v("或者"),s("em",[t._v("less")]),t._v("，增加了css代码的复用性。层级*，mixin*， 变量，循环， 函数等对编写以及开发UI组件都极为方便。")]),t._v(" "),s("p",[s("strong",[t._v("后处理器，")]),t._v(" 如： "),s("em",[t._v("postCss")]),t._v("，通常是在完成的样式表中根据"),s("em",[t._v("css")]),t._v("规范处理"),s("em",[t._v("css")]),t._v("，让其更加有效。目前最常做的是给css属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。")]),t._v(" "),s("p",[s("em",[t._v("css")]),t._v("预处理器为"),s("em",[t._v("css")]),t._v("增加一些编程特性，无需考虑浏览器的兼容问题，可以在"),s("em",[t._v("CSS")]),t._v("中使用变量，简单的逻辑程序，函数等在编程语言中的一些基本的性能，可以让"),s("em",[t._v("css")]),t._v("更加的简洁，增加适应性以及可读性，可维护性等。")]),t._v(" "),s("p",[t._v("其它"),s("em",[t._v("css")]),t._v("预处理器语言："),s("em",[t._v("Sass（Scss）")]),t._v(", "),s("em",[t._v("Less")]),t._v(", "),s("em",[t._v("Stylus")]),t._v(", "),s("em",[t._v("Turbine")]),t._v(", "),s("em",[t._v("Swithch css")]),t._v(", "),s("em",[t._v("CSS Cacheer")]),t._v(", "),s("em",[t._v("DT Css")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("使用原因：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结构清晰， 便于扩展")])]),t._v(" "),s("li",[s("p",[t._v("可以很方便的屏蔽浏览器私有语法的差异")])]),t._v(" "),s("li",[s("p",[t._v("可以轻松实现多重继承")])]),t._v(" "),s("li",[s("p",[t._v("完美的兼容了CSS代码，可以应用到老项目中")])])]),t._v(" "),s("h3",{attrs:{id:"_23-before-和-after-的双冒号和单冒号有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-before-和-after-的双冒号和单冒号有什么区别"}},[t._v("#")]),t._v(" 23. ::before 和 :after 的双冒号和单冒号有什么区别？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("冒号( : )用于CSS3伪类，双冒号( : : )用于CSS3伪元素。")])]),t._v(" "),s("li",[s("p",[t._v("::before就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于dom之中，只存在在页面之中。")])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" :before 和 :after 这两个伪元素，是在CSS2.1里新出现的。起初，伪元素的前缀使用的是单冒号语法，但随着Web的进化，在CSS3的规范里，伪元素的语法被修改成使用双冒号，成为::before、::after。")]),t._v(" "),s("h3",{attrs:{id:"_24-display-inline-block-什么时候会显示间隙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-display-inline-block-什么时候会显示间隙"}},[t._v("#")]),t._v(" 24. display:inline-block 什么时候会显示间隙？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("有空格时会有间隙，可以删除空格解决；")])]),t._v(" "),s("li",[s("p",[t._v("margin正值时，可以让margin使用负值解决；")])]),t._v(" "),s("li",[s("p",[t._v("使用font-size时，可通过设置font-size:0、letter-spacing、word-spacing解决")])])]),t._v(" "),s("h3",{attrs:{id:"_25-单行、多行文本溢出隐藏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-单行、多行文本溢出隐藏"}},[t._v("#")]),t._v(" 25. 单行、多行文本溢出隐藏")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("单行文本溢出")])])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         //溢出隐藏\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ellipsis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // 溢出使用省略号\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("noweap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     //规定段落文本不进行换行\n\n")])])]),s("ul",[s("li",[s("strong",[t._v("多行文本溢出")])])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("               //溢出隐藏\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ellipsis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       // 溢出使用省略号\ndisplay：-webkit-box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         //使用弹性盒子模式显示\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webit-box-orient")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("verical "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  //设置弹性伸缩盒子排序方式，从上到下垂直排列\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-line-clamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         //显示行数为 3行\n\n")])])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 由于上面的三个属性都是 CSS3 的属性，没有浏览器可以兼容，所以要在前面加一个-webkit- 来兼容一部分浏览器。")]),t._v(" "),s("h3",{attrs:{id:"_26-sass、less-是什么-为什么要使用他们"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-sass、less-是什么-为什么要使用他们"}},[t._v("#")]),t._v(" 26. Sass、Less 是什么？为什么要使用他们？")]),t._v(" "),s("p",[t._v("他们都是 CSS 预处理器，是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS。 例如 Less 是一种动态样式语言，将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函数，LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可以在服务端运行 (借助 Node.js)。")]),t._v(" "),s("p",[t._v("为什么要使用它们？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结构清晰，便于扩展。 可以方便地屏蔽浏览器私有语法差异。封装对浏览器语法差异的重复处理， 减少无意义的机械劳动。")])]),t._v(" "),s("li",[s("p",[t._v("可以轻松实现多重继承。 完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。")])])]),t._v(" "),s("h3",{attrs:{id:"_27-对媒体查询的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-对媒体查询的理解"}},[t._v("#")]),t._v(" 27. 对媒体查询的理解？")]),t._v(" "),s("p",[t._v("他们都是 CSS 预处理器，是 CSS 上的一种抽象层。他们是一种特殊的语法/语言编译成 CSS。 例如 Less 是一种动态样式语言，将 CSS 赋予了动态语言的特性，如变量，继承，运算， 函数，LESS 既可以在客户端上运行 (支持 IE 6+, Webkit, Firefox)，也可以在服务端运行 (借助 Node.js)。")]),t._v(" "),s("p",[s("strong",[t._v("为什么要使用它们？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结构清晰，便于扩展。 可以方便地屏蔽浏览器私有语法差异。封装对浏览器语法差异的重复处理， 减少无意义的机械劳动。")])]),t._v(" "),s("li",[s("p",[t._v("可以轻松实现多重继承。 完全兼容 CSS 代码，可以方便地应用到老项目中。LESS 只是在 CSS 语法上做了扩展，所以老的 CSS 代码也可以与 LESS 代码一同编译。")])])]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("link元素中使用"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("媒体查询 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link rel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stylesheet'")]),t._v(" media"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(max-width:800px)'")]),t._v(" href"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'example.css'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("样式表中的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("媒体查询 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n@media "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("800px")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  #imgea"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("backgounrd")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("简单来说，使用 "),s("strong",[t._v("@media")]),t._v(" 查询，可以针对不同的媒体类型定义不同的样式。"),s("strong",[t._v("@media")]),t._v(" 可以针对不同的屏幕尺寸设置不同的样式，特别是需要设置设计响应式的页面，@media 是非常有用的。当重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。")]),t._v(" "),s("h3",{attrs:{id:"_28-对-css-工程化的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-对-css-工程化的理解"}},[t._v("#")]),t._v(" 28. 对 CSS 工程化的理解")]),t._v(" "),s("p",[t._v("CSS 工程化是为了解决以下问题：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("宏观设计：")]),t._v(" CSS 代码如何组织、如何拆分、模块结构怎样设计？")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("编码优化：")]),t._v(" 怎样写出更好的 CSS？")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("构建：")]),t._v(" 如何处理我的 CSS，才能让它的打包结果最优？")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("可维护性：")]),t._v(" 代码写完了，如何最小化它后续的变更成本？如何确保任何一个同事都能轻松接手？")])])]),t._v(" "),s("p",[t._v("以下三个方向都是时下比较流行的、普适性非常好的 CSS 工程化实践：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("预处理器：Less、 Sass 等；")])]),t._v(" "),s("li",[s("p",[t._v("重要的工程化插件： PostCss；")])]),t._v(" "),s("li",[s("p",[t._v("Webpack loader 等 。")])])]),t._v(" "),s("p",[t._v("基于这三个方向，可以衍生出一些具有典型意义的子问题，这里我们逐个来看：")]),t._v(" "),s("p",[s("strong",[t._v("（1）预处理器：为什么要用预处理器？它的出现是为了解决什么问题？")])]),t._v(" "),s("p",[t._v("预处理器，其实就是 CSS 世界的“轮子”。预处理器支持我们写一种类似 CSS、但实际并不是 CSS 的语言，然后把它编译成 CSS 代码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/5ee2df9500016ef112620300.png",alt:""}})]),t._v(" "),s("p",[t._v("那为什么写 CSS 代码写得好好的，偏偏要转去写“类 CSS”呢？这就和本来用 JS 也可以实现所有功能，但最后却写 React 的 jsx 或者 Vue 的模板语法一样——为了爽！要想知道有了预处理器有多爽，首先要知道的是传统 CSS 有多不爽。随着前端业务复杂度的提高，前端工程中对 CSS 提出了以下的诉求：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("宏观设计上：我们希望能优化 CSS 文件的目录结构，对现有的 CSS 文件实现复用；")])]),t._v(" "),s("li",[s("p",[t._v("编码优化上：我们希望能写出结构清晰、简明易懂的 CSS，需要它具有一目了然的嵌套层级关系，而不是无差别的一铺到底写法；我们希望它具有变量特征、计算能力、循环能力等等更强的可编程性，这样我们可以少写一些无用的代码；")])]),t._v(" "),s("li",[s("p",[t._v("可维护性上：更强的可编程性意味着更优质的代码结构，实现复用意味着更简单的目录结构和更强的拓展能力，这两点如果能做到，自然会带来更强的可维护性。")])])]),t._v(" "),s("p",[t._v("这三点是传统 CSS 所做不到的，也正是预处理器所解决掉的问题。预处理器普遍会具备这样的特性：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("嵌套代码的能力，通过嵌套来反映不同 css 属性之间的层级关系 ；")])]),t._v(" "),s("li",[s("p",[t._v("支持定义 css 变量；")])]),t._v(" "),s("li",[s("p",[t._v("提供计算函数；")])]),t._v(" "),s("li",[s("p",[t._v("允许对代码片段进行 extend 和 mixin；")])]),t._v(" "),s("li",[s("p",[t._v("支持循环语句的使用；")])]),t._v(" "),s("li",[s("p",[t._v("支持将 CSS 文件模块化，实现复用。")])])]),t._v(" "),s("p",[s("strong",[t._v("（2）PostCss：PostCss 是如何工作的？我们在什么场景下会使用 PostCss？")])]),t._v(" "),s("p",[t._v("PostCss 仍然是一个对 CSS 进行解析和处理的工具，它会对 CSS 做这样的事情：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/5ee2df9e0001fdcf12580304.png",alt:""}})]),t._v(" "),s("p",[t._v("它和预处理器的不同就在于，预处理器处理的是 类CSS，而 PostCss 处理的就是 CSS 本身。Babel 可以将高版本的 JS 代码转换为低版本的 JS 代码。PostCss 做的是类似的事情：它可以编译尚未被浏览器广泛支持的先进的 CSS 语法，还可以自动为一些需要额外兼容的语法增加前缀。更强的是，由于 PostCss 有着强大的插件机制，支持各种各样的扩展，极大地强化了 CSS 的能力。")]),t._v(" "),s("p",[t._v("PostCss 在业务中的使用场景非常多：\n●提高 CSS 代码的可读性：PostCss 其实可以做类似预处理器能做的工作；\n●当我们的 CSS 代码需要适配低版本浏览器时，PostCss 的 Autoprefixer 插件可以帮助我们自动增加浏览器前缀；\n●允许我们编写面向未来的 CSS：PostCss 能够帮助我们编译 CSS next 代码；\n（3）Webpack 能处理 CSS 吗？如何实现？\nWebpack 能处理 CSS 吗：\n●Webpack 在裸奔的状态下，是不能处理 CSS 的，Webpack 本身是一个面向 JavaScript 且只能处理 JavaScript 代码的模块化打包工具；\n●Webpack 在 loader 的辅助下，是可以处理 CSS 的。")]),t._v(" "),s("p",[t._v("如何用 Webpack 实现对 CSS 的处理：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Webpack 中操作 CSS 需要使用的两个关键的 loader：css-loader 和 style-loader")])]),t._v(" "),s("li",[s("p",[t._v("注意，答出“用什么”有时候可能还不够，面试官会怀疑你是不是在背答案，所以你还需要了解每个 loader 都做了什么事情：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("css-loader：导入 CSS 模块，对 CSS 代码进行编译处理；")])]),t._v(" "),s("li",[s("p",[t._v("style-loader：创建style标签，把 CSS 内容写入标签。")])])])])]),t._v(" "),s("p",[t._v("在实际使用中，"),s("strong",[t._v("css-loader 的执行顺序一定要安排在 style-loader 的前面")]),t._v("。因为只有完成了编译过程，才可以对 css 代码进行插入；若提前插入了未编译的代码，那么 webpack 是无法理解这坨东西的，它会无情报错。")]),t._v(" "),s("h3",{attrs:{id:"_29-如何判断元素是否到达可视区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-如何判断元素是否到达可视区域"}},[t._v("#")]),t._v(" 29. 如何判断元素是否到达可视区域")]),t._v(" "),s("p",[t._v("以图片显示为例：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("window.innerHeight 是浏览器可视区的高度；")])]),t._v(" "),s("li",[s("p",[t._v("document.body.scrollTop || document.documentElement.scrollTop 是浏览器滚动的过的距离；")])]),t._v(" "),s("li",[s("p",[t._v("imgs.offsetTop 是元素顶部距离文档顶部的高度（包括滚动条的距离）；")])]),t._v(" "),s("li",[s("p",[t._v("内容达到显示区域的：img.offsetTop < window.innerHeight + document.body.scrollTop;")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/20200605165714817.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_30-z-index属性在什么情况下会失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-z-index属性在什么情况下会失效"}},[t._v("#")]),t._v(" 30.  z-index属性在什么情况下会失效")]),t._v(" "),s("p",[t._v("通常 z-index 的使用是在有两个重叠的标签，在一定的情况下控制其中一个在另一个的上方或者下方出现。z-index值越大就越是在上层。z-index元素的position属性需要是relative，absolute或是fixed。")]),t._v(" "),s("p",[t._v("z-index属性在下列情况下会失效：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("父元素position为relative时，子元素的z-index失效。解决：父元素position改为absolute或static；")])]),t._v(" "),s("li",[s("p",[t._v("元素没有设置position属性为非static属性。解决：设置该元素的position属性为relative，absolute或是fixed中的一种；")])]),t._v(" "),s("li",[s("p",[t._v("元素在设置z-index的同时还设置了float浮动。解决：float去除，改为display：inline-block；")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);